#pragma version 8
intcblock 0 1 1000000 32 320 2223
bytecblock 0x 0x626f785f6e616d65 0x696e7375726572 0x706f6c6963795f65787069726174696f6e5f64617465 0x00 0x636f7665726167655f616d6f756e74 0x50656e64696e67
txn NumAppArgs
intc_0 // 0
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0x30c6d58a // "opt_in()void"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0xa565e9b2 // "write_to_data_box(byte[],byte[])void"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0xbec76d87 // "bootstrap()void"
==
bnz main_l23
txna ApplicationArgs 0
pushbytes 0xe4691ebd // "purchase_policy(pay)void"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x2a94b9ee // "approve_claim(address,uint64)void"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0x43483e31 // "reject_claim(address)void"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x6f1acd6d // "review_claim(byte[],byte[])void"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0x7adb0c55 // "send_request(byte[],byte[],uint64,(uint32,byte[],uint64)[],uint32,byte[],application)void"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x88a176b2 // "get_policy(address)(address,uint64,bool,uint64,uint64,string,uint64)"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x69bdcd84 // "update_coverage_amount(uint64)void"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0xaed5d0d6 // "update_expiration_timeline(uint64)void"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x345d51fe // "opt_in_gora(asset,application)void"
==
bnz main_l14
err
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optingoracaster_26
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateexpirationtimelinecaster_25
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatecoverageamountcaster_24
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getpolicycaster_23
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub sendrequestcaster_22
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub reviewclaimcaster_21
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub rejectclaimcaster_20
intc_1 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub approveclaimcaster_19
intc_1 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub purchasepolicycaster_18
intc_1 // 1
return
main_l23:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub bootstrapcaster_17
intc_1 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub writetodataboxcaster_16
intc_1 // 1
return
main_l25:
txn OnCompletion
intc_1 // OptIn
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optincaster_15
intc_1 // 1
return
main_l26:
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l28
err
main_l28:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_3
intc_1 // 1
return

// opt_in
optin_0:
proto 1 0
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
frame_dig -1
itxn_field ApplicationID
intc_1 // OptIn
itxn_field OnCompletion
itxn_submit
retsub

// opt_in_asset
optinasset_1:
proto 1 0
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
frame_dig -1
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
intc_0 // 0
itxn_field AssetAmount
itxn_submit
retsub

// opt_in
optin_2:
proto 0 0
intc_0 // 0
return

// delete
delete_3:
proto 0 0
intc_0 // 0
return

// write_to_data_box
writetodatabox_4:
proto 2 0
bytec_0 // ""
dupn 2
intc_0 // 0
frame_dig -1
extract 2 0
frame_bury 1
frame_dig 1
frame_dig 1
pushint 64 // 64
extract_uint16
frame_dig 1
pushint 66 // 66
extract_uint16
substring3
frame_bury 2
bytec_1 // "box_name"
app_global_get
box_del
pop
bytec_1 // "box_name"
app_global_get
frame_dig 2
intc_0 // 0
extract_uint16
frame_bury 3
frame_dig 3
pushint 2 // 2
+
box_create
pop
intc_1 // 1
intc_1 // 1
==
assert
bytec_1 // "box_name"
app_global_get
frame_dig 2
box_put
retsub

// bootstrap
bootstrap_5:
proto 0 0
bytec_1 // "box_name"
bytec_0 // ""
app_global_put
bytec 5 // "coverage_amount"
pushint 300000 // 300000
app_global_put
bytec_2 // "insurer"
bytec_0 // ""
app_global_put
bytec_3 // "policy_expiration_date"
pushint 31536000 // 31536000
app_global_put
pushbytes 0x77696e645f67757374 // "wind_gust"
pushint 100 // 100
app_global_put
pushbytes 0x77696e645f7370656564 // "wind_speed"
pushint 75 // 75
app_global_put
bytec_2 // "insurer"
global CurrentApplicationAddress
app_global_put
retsub

// purchase_policy
purchasepolicy_6:
proto 1 0
bytec_0 // ""
intc_0 // 0
dupn 3
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -1
gtxns Sender
txn Sender
==
// Sender mismatch
assert
global GroupSize
pushint 2 // 2
==
// Group size not 2
assert
txn Sender
balance
intc_2 // 1000000
>=
// Sender balance is lower than Premium
assert
frame_dig -1
gtxns TypeEnum
intc_1 // pay
==
// Invalid txn type, amount or receiver.
assert
frame_dig -1
gtxns Amount
intc_2 // 1000000
==
// Invalid txn type, amount or receiver.
assert
frame_dig -1
gtxns Receiver
bytec_2 // "insurer"
app_global_get
==
// Invalid txn type, amount or receiver.
assert
txn Sender
frame_bury 0
frame_dig 0
len
intc_3 // 32
==
assert
intc_2 // 1000000
frame_bury 1
intc_1 // 1
!
!
frame_bury 2
global LatestTimestamp
frame_bury 3
frame_dig 3
bytec_3 // "policy_expiration_date"
app_global_get
+
frame_bury 4
bytec 6 // "Pending"
frame_bury 5
frame_dig 5
len
itob
extract 6 0
frame_dig 5
concat
frame_bury 5
intc_0 // 0
frame_bury 6
frame_dig 0
frame_dig 1
itob
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 2
setbit
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
frame_bury 11
frame_dig 11
frame_bury 10
pushint 67 // 67
frame_bury 8
frame_dig 8
itob
extract 6 0
concat
frame_dig 6
itob
concat
frame_dig 10
concat
frame_bury 7
txn Sender
box_del
pop
txn Sender
frame_dig 7
box_put
retsub

// approve_claim
approveclaim_7:
proto 2 0
bytec_0 // ""
dup
intc_0 // 0
dupn 3
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
dup
frame_dig -2
box_get
store 1
store 0
load 1
assert
load 0
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
intc_3 // 32
extract_uint64
frame_bury 2
frame_dig 0
intc 4 // 320
getbit
frame_bury 3
frame_dig 0
pushint 41 // 41
extract_uint64
frame_bury 4
frame_dig 0
pushint 49 // 49
extract_uint64
frame_bury 5
frame_dig 0
frame_dig 0
pushint 57 // 57
extract_uint16
dig 1
len
substring3
frame_bury 6
frame_dig 1
frame_dig -2
==
assert
frame_dig 2
intc_2 // 1000000
==
assert
frame_dig 3
intc_1 // 1
==
assert
frame_dig 6
extract 2 0
bytec 6 // "Pending"
==
assert
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig -2
itxn_field Receiver
frame_dig -1
itxn_field Amount
itxn_submit
pushbytes 0x417070726f766564 // "Approved"
frame_bury 7
frame_dig 7
len
itob
extract 6 0
frame_dig 7
concat
frame_bury 7
frame_dig -1
frame_bury 8
frame_dig 1
frame_dig 2
itob
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 3
setbit
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 7
frame_bury 12
frame_dig 12
frame_bury 11
pushint 67 // 67
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig 8
itob
concat
frame_dig 11
concat
frame_bury 0
frame_dig -2
box_del
pop
frame_dig -2
frame_dig 0
box_put
retsub

// reject_claim
rejectclaim_8:
proto 1 0
bytec_0 // ""
dup
intc_0 // 0
dupn 3
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -1
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
intc_3 // 32
extract_uint64
frame_bury 2
frame_dig 0
intc 4 // 320
getbit
frame_bury 3
frame_dig 0
pushint 41 // 41
extract_uint64
frame_bury 4
frame_dig 0
pushint 49 // 49
extract_uint64
frame_bury 5
pushbytes 0x52656a6563746564 // "Rejected"
frame_bury 6
frame_dig 6
len
itob
extract 6 0
frame_dig 6
concat
frame_bury 6
frame_dig 0
pushint 59 // 59
extract_uint64
frame_bury 7
frame_dig 1
frame_dig 2
itob
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 3
setbit
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
frame_bury 12
frame_dig 12
frame_bury 11
pushint 67 // 67
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig 7
itob
concat
frame_dig 11
concat
frame_bury 8
txn Sender
box_del
pop
txn Sender
frame_dig 8
box_put
retsub

// review_claim
reviewclaim_9:
proto 2 0
frame_dig -2
frame_dig -1
callsub writetodatabox_4
retsub

// send_request
sendrequest_10:
proto 7 0
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
intc 5 // 2223
txna Applications 1
==
assert
frame_dig -4
frame_bury 7
frame_dig 7
frame_bury 6
pushint 8 // 8
frame_bury 4
frame_dig 4
frame_dig 7
len
+
frame_bury 5
frame_dig 5
pushint 65536 // 65536
<
assert
frame_dig 4
itob
extract 6 0
frame_dig -3
itob
extract 4 0
concat
frame_dig -2
frame_bury 7
frame_dig 6
frame_dig 7
concat
frame_bury 6
frame_dig 5
frame_bury 4
frame_dig 4
itob
extract 6 0
concat
frame_dig 6
concat
frame_bury 3
txna Applications 0
frame_bury 8
pushbytes 0x7265766965775f636c61696d28627974655b5d2c627974655b5d29766f6964 // "review_claim(byte[],byte[])void"
frame_bury 9
frame_dig 9
len
itob
extract 6 0
frame_dig 9
concat
frame_bury 9
frame_dig 8
itob
frame_dig 9
frame_bury 15
frame_dig 15
frame_bury 14
pushint 10 // 10
frame_bury 12
frame_dig 12
itob
extract 6 0
concat
frame_dig 14
concat
frame_bury 11
intc_1 // 1
frame_bury 16
global CurrentApplicationID
frame_bury 17
frame_dig 17
itob
frame_bury 18
frame_dig -5
itob
frame_bury 23
global CurrentApplicationAddress
frame_bury 28
frame_dig 28
len
intc_3 // 32
==
assert
frame_dig 28
frame_bury 29
frame_dig -7
frame_bury 39
frame_dig 39
frame_bury 38
pushint 10 // 10
frame_bury 36
frame_dig 36
itob
extract 6 0
frame_dig 17
itob
concat
frame_dig 38
concat
frame_bury 35
intc_1 // 1
frame_bury 46
frame_dig 46
itob
extract 6 0
frame_dig 35
frame_bury 45
frame_dig 45
frame_bury 44
pushint 2 // 2
frame_bury 42
frame_dig 42
itob
extract 6 0
frame_dig 44
concat
concat
frame_bury 41
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc 5 // 2223
itxn_field ApplicationID
pushbytes 0x6f6ae98b // "request(byte[],byte[],uint64,byte[],uint64[],uint64[],address[],(byte[],uint64)[])void"
itxn_field ApplicationArgs
frame_dig 3
itxn_field ApplicationArgs
frame_dig 11
itxn_field ApplicationArgs
frame_dig 16
itob
itxn_field ApplicationArgs
frame_dig -6
itxn_field ApplicationArgs
frame_dig 18
itxn_field ApplicationArgs
frame_dig 23
itxn_field ApplicationArgs
frame_dig 29
itxn_field ApplicationArgs
frame_dig 41
itxn_field ApplicationArgs
itxn_submit
retsub

// get_policy
getpolicy_11:
proto 1 1
bytec_0 // ""
frame_dig -1
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 0
retsub

// update_coverage_amount
updatecoverageamount_12:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec 5 // "coverage_amount"
frame_dig -1
app_global_put
retsub

// update_expiration_timeline
updateexpirationtimeline_13:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_3 // "policy_expiration_date"
frame_dig -1
app_global_put
retsub

// opt_in_gora
optingora_14:
proto 2 0
txn Sender
global CreatorAddress
==
assert
txna Assets 0
callsub optinasset_1
txna Applications 1
callsub optin_0
retsub

// opt_in_caster
optincaster_15:
proto 0 0
callsub optin_2
retsub

// write_to_data_box_caster
writetodataboxcaster_16:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub writetodatabox_4
retsub

// bootstrap_caster
bootstrapcaster_17:
proto 0 0
callsub bootstrap_5
retsub

// purchase_policy_caster
purchasepolicycaster_18:
proto 0 0
intc_0 // 0
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
callsub purchasepolicy_6
retsub

// approve_claim_caster
approveclaimcaster_19:
proto 0 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
frame_dig 0
frame_dig 1
callsub approveclaim_7
retsub

// reject_claim_caster
rejectclaimcaster_20:
proto 0 0
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub rejectclaim_8
retsub

// review_claim_caster
reviewclaimcaster_21:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub reviewclaim_9
retsub

// send_request_caster
sendrequestcaster_22:
proto 0 0
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
frame_bury 3
txna ApplicationArgs 5
intc_0 // 0
extract_uint32
frame_bury 4
txna ApplicationArgs 6
frame_bury 5
txna ApplicationArgs 7
intc_0 // 0
getbyte
frame_bury 6
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
callsub sendrequest_10
retsub

// get_policy_caster
getpolicycaster_23:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub getpolicy_11
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
concat
log
retsub

// update_coverage_amount_caster
updatecoverageamountcaster_24:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub updatecoverageamount_12
retsub

// update_expiration_timeline_caster
updateexpirationtimelinecaster_25:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub updateexpirationtimeline_13
retsub

// opt_in_gora_caster
optingoracaster_26:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 1
frame_dig 0
frame_dig 1
callsub optingora_14
retsub