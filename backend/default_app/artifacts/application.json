{
    "hints": {
        "opt_in()void": {
            "call_config": {
                "opt_in": "CALL"
            }
        },
        "write_to_data_box(byte[],byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "bootstrap()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "purchase_policy(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "approve_claim(address,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "reject_claim(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "review_claim(byte[],byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_request(uint64,string,byte[],byte[],uint64,(uint32,byte[],uint64)[],uint32,byte[],application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_policy(address)(address,uint64,bool,uint64,uint64,string,uint64)": {
            "structs": {
                "output": {
                    "name": "Policy",
                    "elements": [
                        [
                            "customer_address",
                            "address"
                        ],
                        [
                            "premium_amount",
                            "uint64"
                        ],
                        [
                            "active_status",
                            "bool"
                        ],
                        [
                            "registration_date",
                            "uint64"
                        ],
                        [
                            "expiration_date",
                            "uint64"
                        ],
                        [
                            "claim_status",
                            "string"
                        ],
                        [
                            "amount_claimed",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_coverage_amount(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_expiration_timeline(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in_gora(asset,application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "box_name": {
                    "type": "bytes",
                    "key": "box_name",
                    "descr": ""
                },
                "coverage_amount": {
                    "type": "uint64",
                    "key": "coverage_amount",
                    "descr": "This is the coverage amount"
                },
                "insurer": {
                    "type": "bytes",
                    "key": "insurer",
                    "descr": "The insurer address"
                },
                "policy_expiration_date": {
                    "type": "uint64",
                    "key": "policy_expiration_date",
                    "descr": "Expiration of policy. Default is set to yearly."
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Insurance dApp",
        "methods": [
            {
                "name": "opt_in",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "write_to_data_box",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "response_type_bytes"
                    },
                    {
                        "type": "byte[]",
                        "name": "response_body_bytes"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "bootstrap",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Bootstrap global state vlaues."
            },
            {
                "name": "purchase_policy",
                "args": [
                    {
                        "type": "pay",
                        "name": "pay_txn"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Buys a new property policy for an account.\nA new policy id is generated to identify the policy once purchased successfully."
            },
            {
                "name": "approve_claim",
                "args": [
                    {
                        "type": "address",
                        "name": "receiver_addr"
                    },
                    {
                        "type": "uint64",
                        "name": "coverage_amt"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Approve policy claim"
            },
            {
                "name": "reject_claim",
                "args": [
                    {
                        "type": "address",
                        "name": "receiver_addr"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Reject a policy claim"
            },
            {
                "name": "review_claim",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "response_type_bytes"
                    },
                    {
                        "type": "byte[]",
                        "name": "response_body_bytes"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "send_request",
                "args": [
                    {
                        "type": "uint64",
                        "name": "time_of_event"
                    },
                    {
                        "type": "string",
                        "name": "location_of_event"
                    },
                    {
                        "type": "byte[]",
                        "name": "box_name"
                    },
                    {
                        "type": "byte[]",
                        "name": "key"
                    },
                    {
                        "type": "uint64",
                        "name": "token_asset_id"
                    },
                    {
                        "type": "(uint32,byte[],uint64)[]",
                        "name": "source_arr"
                    },
                    {
                        "type": "uint32",
                        "name": "agg_method"
                    },
                    {
                        "type": "byte[]",
                        "name": "user_data"
                    },
                    {
                        "type": "application",
                        "name": "main_app_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_policy",
                "args": [
                    {
                        "type": "address",
                        "name": "addr"
                    }
                ],
                "returns": {
                    "type": "(address,uint64,bool,uint64,uint64,string,uint64)"
                },
                "desc": "Gets policy for a specific address"
            },
            {
                "name": "update_coverage_amount",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amt"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Update policy coverage amount."
            },
            {
                "name": "update_expiration_timeline",
                "args": [
                    {
                        "type": "uint64",
                        "name": "expiration_timeline"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Update policy expiration timeline."
            },
            {
                "name": "opt_in_gora",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset_reference"
                    },
                    {
                        "type": "application",
                        "name": "main_app_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {},
        "desc": "Insurance dApp"
    },
    "bare_call_config": {
        "delete_application": "CALL",
        "no_op": "CREATE"
    }
}